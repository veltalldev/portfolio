name: Deploy Hugo site to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.126.0'
          extended: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Initialize npm project and install dependencies
        run: |
          # Initialize npm project if package.json doesn't exist
          if [ ! -f package.json ]; then
            npm init -y
          fi
          
          # Install dependencies and ensure they're saved to package.json
          npm install -D tailwindcss postcss autoprefixer postcss-cli @fullhuman/postcss-purgecss
          npm install -D html-validate broken-link-checker lighthouse
          
          # Create lock file
          npm install
          
          # Verify lock file was created
          ls -la package-lock.json
      
      - name: Setup Tailwind
        run: |
          # Create Tailwind config if it doesn't exist
          if [ ! -f tailwind.config.js ]; then
            npx tailwindcss init
          fi

          # Update Tailwind config
          cat > tailwind.config.js << "EOF"
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              './layouts/**/*.html',
              './content/**/*.{html,md}',
              './themes/**/layouts/**/*.html'
            ],
            darkMode: 'class',
            theme: {
              extend: {},
            },
            plugins: [],
          }
          EOF

          # Create PostCSS config if it doesn't exist
          if [ ! -f postcss.config.js ]; then
            cat > postcss.config.js << "EOF"
            module.exports = {
              plugins: {
                tailwindcss: {},
                autoprefixer: {},
              }
            }
            EOF
          fi

          # Create assets/css directory and main.css if they don't exist
          mkdir -p assets/css
          if [ ! -f assets/css/main.css ]; then
            cat > assets/css/main.css << "EOF"
            @tailwind base;
            @tailwind components;
            @tailwind utilities;
            EOF
          fi